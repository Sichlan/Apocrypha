<fw:AcrylicWindow x:Class="Apocrypha.ModernUi.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:converters="clr-namespace:Apocrypha.ModernUi.Helpers.Converters"
        xmlns:viewModels="clr-namespace:Apocrypha.ModernUi.ViewModels"
        xmlns:navigationViewModels="clr-namespace:Apocrypha.ModernUi.ViewModels.Navigation"
        xmlns:res="clr-namespace:Apocrypha.ModernUi.Resources.Localization"
        xmlns:editor="clr-namespace:Apocrypha.ModernUi.ViewModels.Navigation.Editor"
        xmlns:tools="clr-namespace:Apocrypha.ModernUi.ViewModels.Navigation.Tools"
        xmlns:users="clr-namespace:Apocrypha.ModernUi.Views.Display.Users"
        ui:WindowHelper.UseModernWindowStyle="True"
        ui:TitleBar.ExtendViewIntoTitleBar="True"
        ui:TitleBar.IsBackButtonVisible="False"
        ui:TitleBar.IsIconVisible="False"
        ui:TitleBar.Style="{DynamicResource AppTitleBarStyle}"
        ui:TitleBar.ButtonStyle="{DynamicResource AppTitleBarButtonStyle}"
        ui:ThemeManager.IsThemeAware="True"
        ui:ThemeManager.ActualThemeChanged="Window_ActualThemeChanged"
        mc:Ignorable="d"
        x:Name="Window"
        Title="{x:Static res:Localization.ApplicationTitle}"
        d:DataContext="{d:DesignInstance viewModels:MainViewModel, IsDesignTimeCreatable=True}"
        d:DesignHeight="450" d:DesignWidth="800"
        Loaded="OnLoaded">
    <Window.Resources>
        <DataTemplate x:Key="NavigationViewHeaderTemplate">
            <TextBlock Text="{Binding Converter={StaticResource StringToUpperConverter}}" Margin="12,32,0,0" FontWeight="DemiBold"/>
        </DataTemplate>
        <converters:PixelsToGridLengthConverter x:Key="PixelsToGridLength" />

        <Style x:Key="AppTitleBarStyle" TargetType="ui:TitleBarControl">
            <Setter Property="ui:ThemeManager.RequestedTheme" Value="Dark" />
        </Style>
        <Style x:Key="AppTitleBarButtonStyle" TargetType="ui:TitleBarButton">
            <Setter Property="IsActive" Value="{Binding IsActive, ElementName=Window}" />
        </Style>
        <Style x:Key="AppTitleBarBackButtonStyle" TargetType="ui:TitleBarButton" BasedOn="{StaticResource TitleBarBackButtonStyle}">
            <Setter Property="IsActive" Value="{Binding IsActive, ElementName=Window}" />
        </Style>
    </Window.Resources>
    <!-- <Window.InputBindings> -->
    <!--     <MouseBinding  Command="{Binding NavigateBackwardsCommand}"/> -->
    <!-- </Window.InputBindings> -->
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <Grid
            x:Name="AppTitleBar"
            Height="{Binding ElementName=Window, Path=(ui:TitleBar.Height)}">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="TextElement.Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
                    <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundAccentBrush}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsActive, ElementName=Window}" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="{Binding ElementName=Window, Path=(ui:TitleBar.SystemOverlayRightInset), Converter={StaticResource PixelsToGridLength}}" />
            </Grid.ColumnDefinitions>

            <ui:TitleBarButton Grid.Column="0"
                x:Name="BackwardButton"
                Style="{StaticResource AppTitleBarBackButtonStyle}"
                Content="&#xE830;"
                ContentTemplate="{x:Null}"
                Command="{Binding NavigateBackwardsCommand}" />

            <ui:TitleBarButton Grid.Column="1"
                x:Name="ForwardButton"
                Style="{StaticResource AppTitleBarBackButtonStyle}"
                Content="&#xEA47;"
                ContentTemplate="{x:Null}"
                Command="{Binding NavigateForwardsCommand}" />

            <!-- Horizontally centered title -->
            <TextBlock
                Grid.Column="0"
                Grid.ColumnSpan="5"
                FontSize="13"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="{Binding ElementName=Window, Path=Title}" />

            <StackPanel
                Grid.Column="3"
                Orientation="Horizontal">
                <ui:TitleBarButton
                    Style="{StaticResource AppTitleBarButtonStyle}"
                    FontFamily="{DynamicResource ContentControlThemeFontFamily}"
                    FontSize="13"
                    Width="NaN"
                    Padding="16,0"
                    Content="{Binding CurrentUserName}"
                    Command="{Binding ToggleUserPopupCommand}">
                    <ui:FlyoutService.Flyout>
                        <ui:Flyout x:Name="UserFlyout" Placement="Bottom">
                            <!-- Content is set in code behind 'cause fuck you -->
                            <users:UserPopupView x:Name="FlyoutContent" Margin="-10" LoginSuccessful="UserPopupView_OnLoginSuccessful"/>
                        </ui:Flyout>
                    </ui:FlyoutService.Flyout>
                </ui:TitleBarButton>
                <Rectangle
                    Fill="{Binding ElementName=AppTitleBar, Path=(TextElement.Foreground)}"
                    Width="1"
                    Margin="24,8" />
            </StackPanel>
        </Grid>

        <ui:NavigationView
            Grid.Row="1" 
            x:Name="NavView"
            AlwaysShowHeader="True"
            HeaderTemplate="{StaticResource NavigationViewHeaderTemplate}"
            Header="{Binding ActiveViewModel.ViewModelTitle, FallbackValue=NOT LOCALIZED}"
            IsTitleBarAutoPaddingEnabled="True"
            IsBackButtonVisible="Collapsed"
            IsPaneOpen="True"
            ItemInvoked="NavView_ItemInvoked">

            <ui:NavigationView.MenuItems>
                <ui:NavigationViewItemHeader Content="Controls" />
                
                <ui:NavigationViewItem Icon="Home" Content="Home" Tag="{x:Type navigationViewModels:HomeViewModel}"/>
                
                <ui:NavigationViewItemHeader Content="Editor"/>
                <ui:NavigationViewItem Icon="Edit" Content="Home" Tag="{x:Type editor:EditorHomeViewModel}"/>
                <ui:NavigationViewItem Icon="Contact" Content="Races" Tag="{x:Type editor:RaceEditorListViewModel}"/>
                
                <ui:NavigationViewItemHeader Content="Tools"/>
                <ui:NavigationViewItem Icon="Repair" Content="Poison Crafter" Tag="{x:Type tools:PoisonCrafterListViewModel}"/>
            </ui:NavigationView.MenuItems>

            <ContentControl x:Name="ContentFrame" Content="{Binding ActiveViewModel}"/>
        </ui:NavigationView>
    </Grid>
</fw:AcrylicWindow>
